// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages_vision_manager.proto

#ifndef PROTOBUF_messages_5fvision_5fmanager_2eproto__INCLUDED
#define PROTOBUF_messages_5fvision_5fmanager_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_messages_5fvision_5fmanager_2eproto();
void protobuf_AssignDesc_messages_5fvision_5fmanager_2eproto();
void protobuf_ShutdownFile_messages_5fvision_5fmanager_2eproto();

class BallPackage;
class RobotPackage;
class VisionPackage;

// ===================================================================

class BallPackage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BallPackage) */ {
 public:
  BallPackage();
  virtual ~BallPackage();

  BallPackage(const BallPackage& from);

  inline BallPackage& operator=(const BallPackage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BallPackage& default_instance();

  void Swap(BallPackage* other);

  // implements Message ----------------------------------------------

  inline BallPackage* New() const { return New(NULL); }

  BallPackage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BallPackage& from);
  void MergeFrom(const BallPackage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BallPackage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // required float y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // optional float z = 3;
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:BallPackage)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_z();
  inline void clear_has_z();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float x_;
  float y_;
  float z_;
  friend void  protobuf_AddDesc_messages_5fvision_5fmanager_2eproto();
  friend void protobuf_AssignDesc_messages_5fvision_5fmanager_2eproto();
  friend void protobuf_ShutdownFile_messages_5fvision_5fmanager_2eproto();

  void InitAsDefaultInstance();
  static BallPackage* default_instance_;
};
// -------------------------------------------------------------------

class RobotPackage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RobotPackage) */ {
 public:
  RobotPackage();
  virtual ~RobotPackage();

  RobotPackage(const RobotPackage& from);

  inline RobotPackage& operator=(const RobotPackage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotPackage& default_instance();

  void Swap(RobotPackage* other);

  // implements Message ----------------------------------------------

  inline RobotPackage* New() const { return New(NULL); }

  RobotPackage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RobotPackage& from);
  void MergeFrom(const RobotPackage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RobotPackage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // required float x = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  float x() const;
  void set_x(float value);

  // required float y = 3;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 3;
  float y() const;
  void set_y(float value);

  // required float orientation = 4;
  bool has_orientation() const;
  void clear_orientation();
  static const int kOrientationFieldNumber = 4;
  float orientation() const;
  void set_orientation(float value);

  // @@protoc_insertion_point(class_scope:RobotPackage)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_orientation();
  inline void clear_has_orientation();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  float x_;
  float y_;
  float orientation_;
  friend void  protobuf_AddDesc_messages_5fvision_5fmanager_2eproto();
  friend void protobuf_AssignDesc_messages_5fvision_5fmanager_2eproto();
  friend void protobuf_ShutdownFile_messages_5fvision_5fmanager_2eproto();

  void InitAsDefaultInstance();
  static RobotPackage* default_instance_;
};
// -------------------------------------------------------------------

class VisionPackage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:VisionPackage) */ {
 public:
  VisionPackage();
  virtual ~VisionPackage();

  VisionPackage(const VisionPackage& from);

  inline VisionPackage& operator=(const VisionPackage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VisionPackage& default_instance();

  void Swap(VisionPackage* other);

  // implements Message ----------------------------------------------

  inline VisionPackage* New() const { return New(NULL); }

  VisionPackage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VisionPackage& from);
  void MergeFrom(const VisionPackage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VisionPackage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 frame_number = 1;
  bool has_frame_number() const;
  void clear_frame_number();
  static const int kFrameNumberFieldNumber = 1;
  ::google::protobuf::uint32 frame_number() const;
  void set_frame_number(::google::protobuf::uint32 value);

  // required double delay = 2;
  bool has_delay() const;
  void clear_delay();
  static const int kDelayFieldNumber = 2;
  double delay() const;
  void set_delay(double value);

  // required .BallPackage ball = 3;
  bool has_ball() const;
  void clear_ball();
  static const int kBallFieldNumber = 3;
  const ::BallPackage& ball() const;
  ::BallPackage* mutable_ball();
  ::BallPackage* release_ball();
  void set_allocated_ball(::BallPackage* ball);

  // repeated .RobotPackage team = 4;
  int team_size() const;
  void clear_team();
  static const int kTeamFieldNumber = 4;
  const ::RobotPackage& team(int index) const;
  ::RobotPackage* mutable_team(int index);
  ::RobotPackage* add_team();
  ::google::protobuf::RepeatedPtrField< ::RobotPackage >*
      mutable_team();
  const ::google::protobuf::RepeatedPtrField< ::RobotPackage >&
      team() const;

  // repeated .RobotPackage enemy = 5;
  int enemy_size() const;
  void clear_enemy();
  static const int kEnemyFieldNumber = 5;
  const ::RobotPackage& enemy(int index) const;
  ::RobotPackage* mutable_enemy(int index);
  ::RobotPackage* add_enemy();
  ::google::protobuf::RepeatedPtrField< ::RobotPackage >*
      mutable_enemy();
  const ::google::protobuf::RepeatedPtrField< ::RobotPackage >&
      enemy() const;

  // @@protoc_insertion_point(class_scope:VisionPackage)
 private:
  inline void set_has_frame_number();
  inline void clear_has_frame_number();
  inline void set_has_delay();
  inline void clear_has_delay();
  inline void set_has_ball();
  inline void clear_has_ball();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double delay_;
  ::BallPackage* ball_;
  ::google::protobuf::RepeatedPtrField< ::RobotPackage > team_;
  ::google::protobuf::RepeatedPtrField< ::RobotPackage > enemy_;
  ::google::protobuf::uint32 frame_number_;
  friend void  protobuf_AddDesc_messages_5fvision_5fmanager_2eproto();
  friend void protobuf_AssignDesc_messages_5fvision_5fmanager_2eproto();
  friend void protobuf_ShutdownFile_messages_5fvision_5fmanager_2eproto();

  void InitAsDefaultInstance();
  static VisionPackage* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// BallPackage

// required float x = 1;
inline bool BallPackage::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BallPackage::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BallPackage::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BallPackage::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float BallPackage::x() const {
  // @@protoc_insertion_point(field_get:BallPackage.x)
  return x_;
}
inline void BallPackage::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:BallPackage.x)
}

// required float y = 2;
inline bool BallPackage::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BallPackage::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BallPackage::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BallPackage::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float BallPackage::y() const {
  // @@protoc_insertion_point(field_get:BallPackage.y)
  return y_;
}
inline void BallPackage::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:BallPackage.y)
}

// optional float z = 3;
inline bool BallPackage::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BallPackage::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BallPackage::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BallPackage::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline float BallPackage::z() const {
  // @@protoc_insertion_point(field_get:BallPackage.z)
  return z_;
}
inline void BallPackage::set_z(float value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:BallPackage.z)
}

// -------------------------------------------------------------------

// RobotPackage

// required uint32 id = 1;
inline bool RobotPackage::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RobotPackage::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RobotPackage::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RobotPackage::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 RobotPackage::id() const {
  // @@protoc_insertion_point(field_get:RobotPackage.id)
  return id_;
}
inline void RobotPackage::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:RobotPackage.id)
}

// required float x = 2;
inline bool RobotPackage::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RobotPackage::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RobotPackage::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RobotPackage::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float RobotPackage::x() const {
  // @@protoc_insertion_point(field_get:RobotPackage.x)
  return x_;
}
inline void RobotPackage::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:RobotPackage.x)
}

// required float y = 3;
inline bool RobotPackage::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RobotPackage::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RobotPackage::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RobotPackage::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float RobotPackage::y() const {
  // @@protoc_insertion_point(field_get:RobotPackage.y)
  return y_;
}
inline void RobotPackage::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:RobotPackage.y)
}

// required float orientation = 4;
inline bool RobotPackage::has_orientation() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RobotPackage::set_has_orientation() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RobotPackage::clear_has_orientation() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RobotPackage::clear_orientation() {
  orientation_ = 0;
  clear_has_orientation();
}
inline float RobotPackage::orientation() const {
  // @@protoc_insertion_point(field_get:RobotPackage.orientation)
  return orientation_;
}
inline void RobotPackage::set_orientation(float value) {
  set_has_orientation();
  orientation_ = value;
  // @@protoc_insertion_point(field_set:RobotPackage.orientation)
}

// -------------------------------------------------------------------

// VisionPackage

// required uint32 frame_number = 1;
inline bool VisionPackage::has_frame_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VisionPackage::set_has_frame_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VisionPackage::clear_has_frame_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VisionPackage::clear_frame_number() {
  frame_number_ = 0u;
  clear_has_frame_number();
}
inline ::google::protobuf::uint32 VisionPackage::frame_number() const {
  // @@protoc_insertion_point(field_get:VisionPackage.frame_number)
  return frame_number_;
}
inline void VisionPackage::set_frame_number(::google::protobuf::uint32 value) {
  set_has_frame_number();
  frame_number_ = value;
  // @@protoc_insertion_point(field_set:VisionPackage.frame_number)
}

// required double delay = 2;
inline bool VisionPackage::has_delay() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VisionPackage::set_has_delay() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VisionPackage::clear_has_delay() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VisionPackage::clear_delay() {
  delay_ = 0;
  clear_has_delay();
}
inline double VisionPackage::delay() const {
  // @@protoc_insertion_point(field_get:VisionPackage.delay)
  return delay_;
}
inline void VisionPackage::set_delay(double value) {
  set_has_delay();
  delay_ = value;
  // @@protoc_insertion_point(field_set:VisionPackage.delay)
}

// required .BallPackage ball = 3;
inline bool VisionPackage::has_ball() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VisionPackage::set_has_ball() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VisionPackage::clear_has_ball() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VisionPackage::clear_ball() {
  if (ball_ != NULL) ball_->::BallPackage::Clear();
  clear_has_ball();
}
inline const ::BallPackage& VisionPackage::ball() const {
  // @@protoc_insertion_point(field_get:VisionPackage.ball)
  return ball_ != NULL ? *ball_ : *default_instance_->ball_;
}
inline ::BallPackage* VisionPackage::mutable_ball() {
  set_has_ball();
  if (ball_ == NULL) {
    ball_ = new ::BallPackage;
  }
  // @@protoc_insertion_point(field_mutable:VisionPackage.ball)
  return ball_;
}
inline ::BallPackage* VisionPackage::release_ball() {
  // @@protoc_insertion_point(field_release:VisionPackage.ball)
  clear_has_ball();
  ::BallPackage* temp = ball_;
  ball_ = NULL;
  return temp;
}
inline void VisionPackage::set_allocated_ball(::BallPackage* ball) {
  delete ball_;
  ball_ = ball;
  if (ball) {
    set_has_ball();
  } else {
    clear_has_ball();
  }
  // @@protoc_insertion_point(field_set_allocated:VisionPackage.ball)
}

// repeated .RobotPackage team = 4;
inline int VisionPackage::team_size() const {
  return team_.size();
}
inline void VisionPackage::clear_team() {
  team_.Clear();
}
inline const ::RobotPackage& VisionPackage::team(int index) const {
  // @@protoc_insertion_point(field_get:VisionPackage.team)
  return team_.Get(index);
}
inline ::RobotPackage* VisionPackage::mutable_team(int index) {
  // @@protoc_insertion_point(field_mutable:VisionPackage.team)
  return team_.Mutable(index);
}
inline ::RobotPackage* VisionPackage::add_team() {
  // @@protoc_insertion_point(field_add:VisionPackage.team)
  return team_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::RobotPackage >*
VisionPackage::mutable_team() {
  // @@protoc_insertion_point(field_mutable_list:VisionPackage.team)
  return &team_;
}
inline const ::google::protobuf::RepeatedPtrField< ::RobotPackage >&
VisionPackage::team() const {
  // @@protoc_insertion_point(field_list:VisionPackage.team)
  return team_;
}

// repeated .RobotPackage enemy = 5;
inline int VisionPackage::enemy_size() const {
  return enemy_.size();
}
inline void VisionPackage::clear_enemy() {
  enemy_.Clear();
}
inline const ::RobotPackage& VisionPackage::enemy(int index) const {
  // @@protoc_insertion_point(field_get:VisionPackage.enemy)
  return enemy_.Get(index);
}
inline ::RobotPackage* VisionPackage::mutable_enemy(int index) {
  // @@protoc_insertion_point(field_mutable:VisionPackage.enemy)
  return enemy_.Mutable(index);
}
inline ::RobotPackage* VisionPackage::add_enemy() {
  // @@protoc_insertion_point(field_add:VisionPackage.enemy)
  return enemy_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::RobotPackage >*
VisionPackage::mutable_enemy() {
  // @@protoc_insertion_point(field_mutable_list:VisionPackage.enemy)
  return &enemy_;
}
inline const ::google::protobuf::RepeatedPtrField< ::RobotPackage >&
VisionPackage::enemy() const {
  // @@protoc_insertion_point(field_list:VisionPackage.enemy)
  return enemy_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_messages_5fvision_5fmanager_2eproto__INCLUDED
